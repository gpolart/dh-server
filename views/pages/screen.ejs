<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
    <link rel="stylesheet" href="/css/nv.d3.css">
</head>
<body class="container-fluid">

    <header>
        <% include ../partials/header %>
    </header>


    <main class="screen">
        <% var local = {};
           local.id = 1;
           local.init = [];
           local.funcs = [];
        %>
        <% screen.rows.forEach(function(row) { %>
            <div class="row screen">
                <% row.cols.forEach(function(col) { %>
                    <div id="widget-<%= local.id %>" class="col-md-<%= col.slots %> widget <%= col.widget %>">
                        <% id = "widget-" + local.id %>
                        <%- include('../widgets/' + col.widget) %>
                        <%
                            local.funcs.push( { name: col.widget, target_id : id, data : "'" + JSON.stringify(col.params) + "'"} );
                            if (col.init) {
                                local.init.push( { name: col.widget, target_id : id, data : "'" + JSON.stringify(col.params) + "'"} );
                            }
                        %>
                    </div>
                <% local.id += 1 %>
                <% }) %>
            </div>
        <% }) %>
    </main>
    <footer>
        <% include ../partials/footer %>
    </footer>
    
    <% include ../partials/javascript %>
    <script src="/jslib/d3.min.js"></script>
    <script type="text/javascript" src="/jslib/gauge.js"></script>
    <script type="text/javascript">
    $(document).ready(function() {
        var screen = {};
        var inits = [
            <% local.init.forEach(function(f) { %>
                { name : <%= f.name %>_init, target_id : "<%= f.target_id %>", data : JSON.parse(<%- f.data %>)},
            <% }) %>
            { name : last_action , target_id : null, params : null }
        ];
        //console.log("inits ");
        //console.dir(inits);
        var funcs = [
            <% local.funcs.forEach(function(f) { %>
                { name : <%= f.name %>_action, target_id : "<%= f.target_id %>", data : JSON.parse(<%- f.data %>)},
            <% }) %>
            { name : last_action , target_id : null, params : null }
        ];

        function last_action() {
            //console.log("last_action ");
        }
        function gauge_init(id, data) {
            //console.log("gauge_init for " + id);
            //console.log("    data " + data);
            //console.dir(data);
            if (!screen.hasOwnProperty('gauges')) {
                screen['gauges'] = {};
            }
            var min = data.min;
            var max = data.max;
            var config = 
				{
					size: 120,
					label: data.label,
					min: undefined != min ? min : 0,
					max: undefined != max ? max : 100,
					minorTicks: 5
				}
            screen.gauges[id] = new Gauge(id, config);
            screen.gauges[id].render();
        }

        function gauge_action(id, data) {
            //console.log("gauge_action for " + id);
            //console.log("variable  " + data.variable);
            $.ajax({
               url: '/api/get_last_value',
               type: 'GET',
               data: {ident : data.variable}
            }).done(function( result ) {
               if ($.isPlainObject(result)) {
                    if (result.status === "OK") {
                        screen.gauges[id].redraw(result.meta.last_value);
                    }
                    else {
                        alert('Erreur système');
                    }
                }
                else {
                    alert('Erreur système');
                }
            }).fail(function(err) {
                alert('Erreur  err = ' + err);
            });

        }
        function simple_action(id, data) {
            //console.log("simple_action for " + id);
            //console.log("variable  " + data.variable);
            $.ajax({
               url: '/api/get_last_value',
               type: 'GET',
               data: {ident : data.variable}
            }).done(function( result ) {
               if ($.isPlainObject(result)) {
                    if (result.status === "OK") {
                        $('#'+id + " .name").html(result.meta.name);
                        var val;
                        var html;
                        if (data.type === 'real') {
                            val = 1.0 * result.meta.last_value
                            html = val.toFixed(data.precision);
                        }
                        else if (data.type === 'int') {
                            val = 1 * result.meta.last_value
                            html = val.toFixed(0);
                        }
                        else {
                            html = result.meta.last_value
                        }
                        //console.log("val  " + val + "  html = " + html);
                        $('#'+id + " .value").html(html);
                        $('#'+id + " .unit").html(result.meta.unit);
                    }
                    else {
                        alert('Erreur système');
                    }
                }
                else {
                    alert('Erreur système');
                }
            }).fail(function(err) {
                alert('Erreur  err = ' + err);
            });

        }

        inits.forEach(function(f) {
            f.name(f.target_id, f.data);
        });

        function call_funcs() {
            funcs.forEach(function(f) {
                f.name(f.target_id, f.data);
            });
        }

        setInterval(function () {
            console.log("interval func");
            call_funcs();
        }, 20000);

        call_funcs();
    });
    </script> 
</body>
</html>
